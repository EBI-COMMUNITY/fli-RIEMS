\documentclass[a4paper]{article}

%Voreinstellungen und benötigte Packages
\parindent0pt
\usepackage{pdflscape}
\usepackage[utf8]{inputenc}
\usepackage[left=2cm,right=2cm,top=2cm,bottom=1cm,footskip=15pt]{geometry}
\usepackage{colortbl}
\usepackage{color}
\usepackage{booktabs}
\usepackage{longtable}
\usepackage{array}
\usepackage{lastpage}
\usepackage{fancyhdr}
\usepackage{amssymb} 
%\usepackage{siunitx}
\renewcommand{\thesubsection}{\arabic{subsection}}
\fancyhf{}
\rhead{\fancyplain{}{Result Report}}
\lhead{\fancyplain{}{\rightmark }} 
\begin{document}

<<r global_variables, include=FALSE>>=
########### Globale Variablen für alle weiteren Chunks vordefinieren
##########################################################

################imported information
##################################
knit_hooks$set(crop = hook_pdfcrop)

arbeitsvz <- as.character(Sys.getenv("arbeitsvz"))
setwd(arbeitsvz)
opts_knit$set(root.dir = arbeitsvz)
samples <- read.table("input.txt", stringsAsFactors = F)
if(nrow(samples)>1){
    input <- paste(samples[,1],collapse = ", ")
}else{
    input <- paste(samples[,1],collapse = "")
}

blastv <- as.character(Sys.getenv("blastv"))
blastdbv <- as.character(Sys.getenv("blastdbv"))
texversion <- as.character(Sys.getenv("texversion"))
projektname <- as.character(Sys.getenv("projektname"))
r <- version$version.string
date1 <- as.character(Sys.getenv("date1"))
date3 <- as.character(Sys.getenv("date3"))

################ Data frames
###########################
TaxIDs <- read.table("ViRIEMS_report-compact.txt",sep="\t",dec=".",header=T,stringsAsFactors = F, fill = T, comment.char="")
input_report <- read.table(file = "input_report.txt", quote = "", sep = "\t", header = F, stringsAsFactors = F)

if("illumina input" %in% input_report[,1]) 
{
	illumina <- "$\\checkmark$"
}else{
	illumina <- "\\--"
}

if("ionTorrent input" %in% input_report[,1]) 
{
	ionTorrent <- "$\\checkmark$"
}else{
	ionTorrent <- "\\--"
}

if("unspecified input" %in% input_report[,1]) 
{
	unspecified <- "$\\checkmark$"
}else{
	unspecified <- "\\--"
}


SkTax <- c(2,2759,2157,10239,12884)
Names <- c("Bacteria","Eukaryote","Archaea","Virus","Viroid")
farben <- c("darkgoldenrod1","deepskyblue3","chartreuse3","deeppink2","aquamarine2")
SkTaxNames <- data.frame(SkTax,Names,farben,stringsAsFactors = F)
SkTaxNames <- SkTaxNames[order(SkTaxNames$Names),]
FamTaxNames <- read.table("ViRIEMS_famtax_names.txt",sep="\t",header=F,stringsAsFactors = F)
FamTaxNames <- na.omit(FamTaxNames)

auswahl <- unique(TaxIDs$SkTax)
colour <- SkTaxNames[which((SkTaxNames$SkTax %in% auswahl)==TRUE),c(1,3)]

################# used functions and packages
##########################################
require(ggplot2)
require(wordcloud)
require(xtable)
require(SciencesPo)
require(plyr)

@

\thispagestyle{empty}
<<Wordcloud,echo=F,comment="",warning=FALSE,message=FALSE,fig.align='center',fig.height=75,fig.width=75, crop = TRUE>>=
########### Wordcloud für das Deckblatt
###################################

freq <- sum(TaxIDs$counts)
header <- "ViRIEMS"
header2 <- samples[,1]
header2 <- strtrim(header2,35) 
freq2 <- rep(freq*0.66,nrow(samples))
wordcloud(words = c(header,header2,TaxIDs$Species),freq = c(freq,freq2,TaxIDs$counts),min.freq = 1,random.order = F,colors = farben,random.color = T,rot.per=.35, scale = c(25,5))
@

\newpage
\pagestyle{fancy}
\setcounter{page}{1}
\cfoot{\thepage\ of \pageref{LastPage}}

\subsection{General information of ViRIEMS-analysis}
In this section general information from the ViRIEMS-analysis to your sample is below-mentioned.\\
\begin{table}[ht]
\begin{tabular}{ll}
\vspace{0.25cm}
\textbf{\textit{sample:}} & \parbox[t]{10cm}{\Sexpr{input}} \\ 
\vspace{0.25cm}
\textbf{\textit{Illumina input:}} & \Sexpr{illumina} \\ 
\vspace{0.25cm}
\textbf{\textit{IonTorrent input:}} & \Sexpr{ionTorrent} \\ 
\vspace{0.25cm}
\textbf{\textit{unspecified input:}} & \Sexpr{unspecified} \\ 
\vspace{0.25cm}
\textbf{\textit{start of analysis:}} &  \Sexpr{date1} \\ 
\vspace{0.25cm} 
\textbf{\textit{end of analysis:}} & \Sexpr{date3} \\ 
\vspace{0.25cm} 
\textbf{\textit{version blast:}} &  \Sexpr{blastv} \\ 
\vspace{0.25cm}
\textbf{\textit{version blast database:}} &  \Sexpr{blastdbv} \\ 
\vspace{0.25cm}
\textbf{\textit{version r:}} &  \Sexpr{r}\\ 
\vspace{0.25cm}
\textbf{\textit{version \LaTeX{}:}} & \Sexpr{texversion}\\
\end{tabular} 
\end{table}
\\
{\footnotesize{ * underlines `` \_ '' might be substitute to hyphens `` - '' due to compatibility with \LaTeX{} and have no influence to the directory structure. }}

\subsection{Note}
\textcolor{red} {\textbf{Please be aware that this short report is only a pre-screening for possible viral sequences found within the sample. This ist NOT a whole RIEMS analysis and therefore results may be not correct. The ViRIEMS analysis comes with absolutely no warranty.}}
\newpage

\subsection{Summarized Results}
On the next pages you can see the distribution of the \textbf{Superkingdom TaxIDs}, the \textbf{Family TaxIDs} and the \textbf{Species TaxIDs}.


In the following seperated tables the most abundant species for the Superkingdom \textbf{Virus} are listed with decreasing order.
<<The_most_common_Species,echo=F,comment="",warning=FALSE,message=FALSE,results='asis',tidy=T>>=

uniqueSkTax <- unique(TaxIDs$SkTax)

for(i in uniqueSkTax){
	head <- TaxIDs[which(TaxIDs$SkTax==i),1:6]
	head <- head[order(head$counts,decreasing = T),]
	if(nrow(head) > 5) 
	{
		head <- head[1:5,]
	} 
	for(j in 1:nrow(head))
	{
		head$Family[j] <- FamTaxNames[,2][FamTaxNames[,1] == head$FamTax[j]]
	}
	head$Family[is.na(head$Family)] <- "Unknown"
	n<-which(SkTaxNames[,1]==i)
	caption <- as.character(paste("The most abundant species found for ",SkTaxNames[n,2],".",sep=""))
	table <- xtable(head,caption=caption)
	align(table) <- c( "l", ">{\\itshape}p{1.25in} |", ">{\\itshape}p{2.5in}||", rep("c", 3),"|c")
	print(table,include.rownames=FALSE,size="normalsize",caption.placement="bottom",tabular.environment="longtable")

}

@

The distribution of \textbf{Family TaxIDs} based on superkingdom \textbf{Virus}.
  
  
  
<<Family_TaxID, echo=F,comment="",warning=FALSE,message=FALSE,fig.height=15,fig.width=15,fig.align='center',fig.cap='Displayed are the 100 most abundant families found by RIEMS. Calculations are based on the abundance of the superkingdoms. Amounts are given in log-scale.', crop = TRUE, fig.pos='ht'>>=

result_fam <- TaxIDs[, c(3,4,6)]
result_fam$log.counts <- log(result_fam$counts)
result_fam$Superkingdom <- 0
for( i in 1:nrow(SkTaxNames)){
	n <- which(result_fam$SkTax==SkTaxNames[i,1])
	
	result_fam$Superkingdom[n] <- SkTaxNames[i,2]
	
}
result_fam$Family <- 0
for(i in 1:nrow(result_fam)){
	if(is.na(result_fam$FamTax[i])==TRUE){
		result_fam$Family[i] <- as.character("NA")
	}else{
		result_fam$Family[i] <- FamTaxNames$V2[which(FamTaxNames$V1 == result_fam$FamTax[i])]
	}
}
uniqueFamTax <- length(unique(result_fam$FamTax))

counts <- data.frame(FamTax=unique(result_fam$FamTax),Family=unique(result_fam$Family))
counts$counts <- 0
counts$Superkingdom <- 0
counts <- na.omit(counts)
j=1
for(i in counts$Family){
	
	counts$counts[j] <- sum(result_fam$counts[which(result_fam$Family==i)])
	counts$Superkingdom[j] <- result_fam$Superkingdom[which(result_fam$Family==i)[1]]
	j=j+1
}

fam_SK <- c("Virus"=nrow(unique(counts[ counts$Superkingdom == "Virus",])),
                "Archaea"=nrow(unique(counts[ counts$Superkingdom == "Archaea",])),
                "Bacteria"=nrow(unique(counts[ counts$Superkingdom == "Bacteria",])),
                "Eukaryote"=nrow(unique(counts[ counts$Superkingdom == "Eukaryote",])),
                "Viroid"=nrow(unique(counts[ counts$Superkingdom == "Viroid",])))

x<-capture.output(seats_fam <-  HighestAverages(parties=names(fam_SK), votes=fam_SK, seats=100, method="ad", threshold=0))
Names <- unique(counts$Superkingdom)

subset <- NULL
for(i in 1:length(Names))
{
  data <- counts[ counts$Superkingdom == Names[i],]
  data <- data[order(data$counts, decreasing=T),]
  num_seats <- seats_fam$Seats[ seats_fam$Party == Names[i]]
  if(num_seats > nrow(data))
  {
    num_seats <- nrow(data)
  }
  data <- data[1:num_seats,]
  subset <- rbind(subset, data)
}

counts <- subset

counts$FamTax <- as.factor(counts$FamTax)
counts$log.counts <- log(counts$counts)
counts <- counts[order(counts$Family),]

bp <- ggplot(counts,aes(x=Family,y=counts,fill=Superkingdom)) +geom_bar(stat = "identity") + theme(axis.text.x=element_text(size = 10,face = "bold",angle=90))
pie <- bp + coord_polar(start=0)

value <- rep(1/length(counts$Family),length(counts$Family))
angles <- 360/(2*pi)* rev(pi/2 + seq( pi/length(counts$Family), 2*pi-pi/length(counts$Family), len=length(counts$Family)))
v2 <- v1 <- angles[angles > 270]
v2 <- v2[order(v2)]
v2 <- v2*-1
vmiddle <- angles[angles == 270]
angles <- c(v1, vmiddle, v2)

labels <- sort(counts$Family)
nudges_y <- max(counts$counts)
Sk <- SkTaxNames[which(SkTaxNames$Names %in% counts$Superkingdom),1]
pie + scale_fill_manual(values = colour[which(colour$SkTax %in% Sk),2]) + theme(plot.margin = unit(c(0,0,0,0), "cm"),legend.text=element_text(size=13,lineheight = 1), 
legend.key.height=unit(1,"cm"), legend.title=element_text(size=14), axis.title=element_text(size=16), 
axis.text.y=element_text(size=15,face = "bold"), axis.text.x=element_blank(), axis.ticks.y=element_blank()) +
 geom_text(aes(y = value/2 + c(0, cumsum(value)[-length(value)]), label = labels),
            size=5,nudge_y = nudges_y,angle=angles)

@

\newpage
The distributuion of \textbf{Species TaxIDs} based on superkingdom \textbf{Virus}.

<<Species_TaxID, echo=F,comment="",warning=FALSE,message=FALSE,fig.height=15,fig.width=15,fig.align='center', fig.cap='Displayed are the 80 most abundant species found by RIEMS. Calculations are based on the abundance of the superkingdoms. Amounts are given in log-scale.', crop = TRUE, fig.pos='ht'>>=

result_tax <- TaxIDs[,c(3,2,6)]
result_tax$log.counts <- log(result_tax$counts)
result_tax$Superkingdom <- 0
for( i in 1:nrow(SkTaxNames)){
	n <- which(result_tax$SkTax==SkTaxNames[i,1])
	
	result_tax$Superkingdom[n] <- SkTaxNames[i,2]
	
}

species_SK <- c("Virus"=nrow(unique(result_tax[ result_tax$Superkingdom == "Virus",])),
                "Archaea"=nrow(unique(result_tax[ result_tax$Superkingdom == "Archaea",])),
                "Bacteria"=nrow(unique(result_tax[ result_tax$Superkingdom == "Bacteria",])),
                "Eukaryote"=nrow(unique(result_tax[ result_tax$Superkingdom == "Eukaryote",])),
                "Viroid"=nrow(unique(result_tax[ result_tax$Superkingdom == "Viroid",])))

x<-capture.output(seats <- HighestAverages(parties=names(species_SK), votes=species_SK, seats=80, method="ad", threshold=0))
Names <- unique(result_tax$Superkingdom)

subset <- NULL
for(i in 1:length(Names))
{
  data <- result_tax[ result_tax$Superkingdom == Names[i],]
  data <- data[order(data$counts, decreasing=T),]
  num_seats <- seats$Seats[ seats$Party == Names[i]]
  data <- data[1:num_seats,]
  subset <- rbind(subset, data)
}

result_tax <- na.omit(subset)

result_tax$Superkingdom <- as.factor(result_tax$Superkingdom)
result_tax$Species <- as.factor(result_tax$Species)
result_tax$SkTax <- as.factor(result_tax$SkTax)
result_tax <- result_tax[order(result_tax$Species),]

bp <- ggplot(result_tax,aes(x=Species,y=counts,fill=Superkingdom)) +geom_bar(stat = "identity") + theme(axis.text.x=element_text(size = 10,face = "bold",angle=90))
pie <- bp + coord_polar(start=0)

value <- rep(1/length(result_tax$Species),length(result_tax$Species))
angles <- 360/(2*pi)* rev(pi/2 + seq( pi/nrow(result_tax), 2*pi-pi/nrow(result_tax), len=nrow(result_tax)))
v2 <- v1 <- angles[angles > 270]
v2 <- v2[order(v2)]
v2 <- v2*-1
vmiddle <- angles[angles == 270]
angles <- c(v1, vmiddle, v2)

Sk <- SkTaxNames[which(SkTaxNames$Names %in% result_tax$Superkingdom),1]
pie +scale_fill_manual(values = colour[which(colour$SkTax %in% Sk),2]) + theme(plot.margin = unit(c(0.5,0.5,0.5,0.5), "cm"),legend.text=element_text(size=13,lineheight = 1),legend.key.height=unit(1,"cm"),legend.title=element_text(size=14),axis.title=element_text(size=16),axis.text.y=element_text(size=13,face = "bold"),axis.text.x=element_blank(), axis.ticks.y=element_blank()) + geom_text(aes(y = value/2 + c(0, cumsum(value)[-length(value)]), label = result_tax$Species),size=5,nudge_y = max(result_tax$counts),angle=angles)

@

\newpage
%\newgeometry{left=1cm,right=1cm,bottom=1cm,top=1cm} % vielleicht ist es mit einer neueren version von geometry möglich dieses zu nutzen
\subsection{Compact Resultreport}
In this table you can find the information about the organisms found by ViRIEMS in the sample(s) \Sexpr{input} ordered by the TaxID and the number of classified reads (counts).
<<resultprotocol_compact,echo=F,results='asis',warnings=F,message=FALSE,tidy=T>>= 

coln <- colnames(TaxIDs)
coln <- gsub("_"," ",coln)
coln <- gsub("[.]", " ",coln)
colnames(TaxIDs) <- coln
caption <- as.character("This table shows the sumarized output of the RIEMS-anlysis. The Superkingdom, Family and Species TaxIDs are displayed. The total count of classified reads and the distribution of the classified reads to the methods and the percentage identity are described. The grey highlighted lines represent the change from one Superkingdom to another.")
table <- xtable(TaxIDs,caption=caption)
align(table) <- c("l",">{\\itshape}p{1.25in} | >{\\itshape}p{1.25in}||", rep("c", 3),"|c|",rep("c",3))

positions <- list(-1)
j=2
for(i in unique(TaxIDs[,3])){
        if(i==11239){
        }else{
                positions[[j]] <- which(TaxIDs$SkTax == i)[1]-1
                j=j+1
        }
}

longtable.header <- "\\toprule\\\\"
for(i in 1:(ncol(TaxIDs)-1)){
	
	longtable.header <- paste(longtable.header,"{\\rotatebox{90}{\\parbox[t]{2cm}{\\raggedright\\textbf{",colnames(TaxIDs)[i]," }}}} &",collapse = "")
	
}
longtable.header <- paste(longtable.header,"{\\rotatebox{90}{\\parbox[t]{2cm}{\\raggedright\\textbf{",colnames(TaxIDs)[ncol(TaxIDs)]," }}}}  \\\\ \\midrule \\endhead \\bottomrule")
longtable.header <- gsub("_|[.]"," ",longtable.header)

print(table, include.rownames=FALSE, include.colnames=F, size="scriptsize",caption.placement="bottom",tabular.environment="longtable",floating=F, add.to.row = list(pos = positions, command = c(longtable.header,rep("\\hline \\hline \\\\",length(positions)-1))), hline.after=NULL)

@ 
%\restoregeometry

\end{document}